import React, { Component, PropTypes } from 'react';
let Highcharts
if (!window.Highcharts) {
  Highcharts = require('highcharts');
} else {
  Highcharts = window.Highcharts;
}

class ReactHighcharts extends Component {
  componentDidMount() {
    if (this.props.modules) {
      this.props.modules.forEach((module) => {
        module(Highcharts);
    });
    }
    const rootNode = this.root;
    const config = this.props.config;
    config.credits = false;
    this.chart = new Highcharts.Chart(rootNode, config, this.props.callback);
  }

  componentDidUpdate(prevProps, prevState) {
    const rootNode = this.root;
    this.chart.destroy();
    this.chart = new Highcharts.Chart(rootNode, this.props.config, this.props.callback);
  }

  componentWillUnmount() {
    if (this.chart) {
      this.chart.destroy();
    }
  }

  render() {
    return <div ref={(c) => { this.root = c; }} className={'react-highcharts'} />;
  }
}

ReactHighcharts.defaultProps = {
  callback: null,
  modules: null,
};

ReactHighcharts.propTypes = {
  config: PropTypes.object.isRequired,
  callback: PropTypes.func,
  modules: PropTypes.array,
};

export default ReactHighcharts;
